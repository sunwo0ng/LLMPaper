anes2012_trim5 <- select(anes2012, female, education, age, income, race_white, race_black, race_hispanic, race_asian, race_native, region_northeast, region_midwest, region_south, region_west, register, vote, party7, ideology, interest, extraversion,agreeableness,conscientiousness,emotionalstability,opennesstoexperiences, weights, survey)
standardized_stacked <- rbind(lucid_trim5, mturk_trim5, mturk_risk_trim5, anes2012_trim5)
save(demos_stacked, file = "drafts/ResearchPolitics/ReplicationArchive/Demos_Table_Stacked_Cleaned.rdata")
save(politics_stacked, file = "drafts/ResearchPolitics/ReplicationArchive/Politics_Table_Stacked_Cleaned.rdata")
save(psych_stacked, file = "drafts/ResearchPolitics/ReplicationArchive/Psych_Table_Stacked_Cleaned.rdata")
save(standardized_stacked, file = "drafts/ResearchPolitics/ReplicationArchive/Standardized_Table_Cleaned.rdata")
means <-
psych_stacked %>%
group_by(survey) %>%
summarize_each(funs(weighted.mean(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "mean")
ses <-
psych_stacked %>%
group_by(survey) %>%
summarize_each(funs(weighted.se(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "se")
means <- within(means,{
mean[variable=="NFC" & survey=="mturk"] <- mean[variable=="NFC" & survey=="mturk_risk"]
mean[variable=="NTE" & survey=="mturk"] <- mean[variable=="NTE" & survey=="mturk_risk"]
mean[variable=="ramean" & survey=="mturk"] <- mean[variable=="ramean" & survey=="mturk_risk"]
})
ses <- within(ses,{
se[variable=="NFC" & survey=="mturk"] <- se[variable=="NFC" & survey=="mturk_risk"]
se[variable=="NTE" & survey=="mturk"] <- se[variable=="NTE" & survey=="mturk_risk"]
se[variable=="ramean" & survey=="mturk"] <- se[variable=="ramean" & survey=="mturk_risk"]
})
means_and_ses <- left_join(means, ses) %>%
filter(variable != "weights", survey!="mturk_risk")
means_and_ses <- within(means_and_ses,{
entry <- rep(NA, nrow(means_and_ses))
entry <-
paste0(format_num(mean, digits = 2), " ",
add_parens(se, digits = 2))
})
Ns <-
psych_stacked %>%
filter(survey!="mturk_risk")%>%
group_by(survey) %>%
summarize(n = n(),
n = comma_format()(n)) %>%
melt(id.var = "survey", value.name = "entry")
df <- bind_rows(means_and_ses %>% select(survey, variable, entry),
Ns)
psych_table <- df %>% dcast(variable ~ survey, value.var = "entry") %>%
bind_rows(data.frame(variable = "Big 5 Personality Index"))
psych_table <- within(psych_table,{
anes[anes == "NA (NA)"] <- ""
anes_panel[anes_panel == "NA (NA)"] <- ""
anes2012[anes2012 == "NA (NA)"] <- ""
anes2012[anes2012 == "NaN (NaN)"] <- ""
cces[cces == "NA (NA)"] <- ""
cces[cces == "NaN (NaN)"] <- ""
ccap[ccap == "NA (NA)"] <- ""
ccap[ccap == "NaN (NaN)"] <- ""
kam[kam == "NaN (NaN)"] <- ""
variable <- factor(variable, levels = c("Big 5 Personality Index","agreeableness","conscientiousness",
"emotionalstability","extraversion", "opennesstoexperiences", "ramean", "NFC",
"NTE", "n"))
})
psych_table <-
psych_table[,c("variable", "lucid", "mturk", "cces", "ccap", "anes_panel", "anes", "anes2012","kam" )] %>%
arrange(variable)
View(psych_table)
load("/Users/Ollie/Dropbox/Lucid Validation/drafts/ResearchPolitics/ReplicationArchive/DemosTableStacked.rdata")
rm(list=ls())
load("/Users/Ollie/Dropbox/Lucid Validation/drafts/ResearchPolitics/ReplicationArchive/DemosTableStacked.rdata")
load("/Users/Ollie/Dropbox/Lucid Validation/drafts/ResearchPolitics/ReplicationArchive/StandardizedDemos.rdata")
load("/Users/Ollie/Dropbox/Lucid Validation/drafts/ResearchPolitics/ReplicationArchive/Standardized_Table_Cleaned.rdata")
View(standardized_stacked)
load("/Users/Ollie/Dropbox/Lucid Validation/drafts/ResearchPolitics/ReplicationArchive/StandardizedDemos.rdata")
View(standardized_stacked)
load("/Users/Ollie/Dropbox/Lucid Validation/drafts/ResearchPolitics/ReplicationArchive/Standardized_Table_Cleaned.rdata")
rm(list=ls())
load("/Users/Ollie/Dropbox/Lucid Validation/drafts/ResearchPolitics/ReplicationArchive/Standardized_Table_Cleaned.rdata")
View(standardized_stacked)
rm(list=ls())
setwd("~/Dropbox/Lucid Validation/drafts/ResearchPolitics/ReplicationArchive")
library(dplyr)
library(stargazer)
source("LucidValidationHelperFunctions.R")
# Load stacked dataset ----------------------------------------------------
load("AsianDiseaseStacked.rdata")
# OLS Regression Models -------------------------------------------------------
fit_AD_lucid <- lm(pfp~ mortality_frame, data=filter(ad_stacked, survey=="lucid"))
fit_AD_mturk <- lm(pfp~ mortality_frame, data=filter(ad_stacked, survey=="mturk"))
fit_AD_original <- lm(pfp~ mortality_frame, data=filter(ad_stacked, survey=="original"))
fit_test <- lm(pfp~ mortality_frame+ survey+ mortality_frame*survey, data=ad_stacked)
stargazer(fit_AD_lucid, fit_AD_mturk, fit_AD_original,
se = makerobustseslist(list(fit_AD_lucid, fit_AD_mturk, fit_AD_original)),
p = makerobustpslist(list(fit_AD_lucid, fit_AD_mturk, fit_AD_original)),
style = "apsr",
column.labels = c("Lucid", "MTurk", "Original"),
dep.var.labels = c("Preference for the Probabilistic Outcome"),
covariate.labels = c("Mortality Frame", "Intercept"),
title = "Asian Disease Replications",
label = "tab: KamSimas",
column.sep.width = "0pt",
omit.stat = c("f", "adj.rsq", "ser"),
notes= c("Robust standard errors are in parentheses.")
)
# Demographics Table
# Functions ---------------------------------------------------------------
install.packages("reshape2")
install.packages("scales")
install.packages("xtable")
install.packages("purrr")
install.packages("dplyr")
install.packages("matrixStats")
library(reshape2)
library(scales)
library(xtable)
library(purrr)
library(dplyr)
library(matrixStats)
source("LucidValidationHelperFunctions.R")
# Load Stacked Dataset ----------------------------------------------------
load("DemosTableStacked.rdata")
# Means and SEs -----------------------------------------------------------
means <-
demos_stacked %>%
filter(survey != "cps_income") %>%
select(-contains("income")) %>%
group_by(survey) %>%
summarize_each(funs(weighted.mean(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "mean")
ses <-
demos_stacked %>%
filter(survey != "cps_income") %>%
select(-contains("income")) %>%
group_by(survey) %>%
summarize_each(funs(weighted.se(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "se")
income_mean_df <-
demos_stacked %>%
group_by(survey) %>%
summarize(income_mean = dollar_format()(weighted.mean(income,w = weights, na.rm = TRUE)),
income_median = dollar_format()(matrixStats::weightedMedian(income,w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "mean")
income_ses_df <-
demos_stacked %>%
group_by(survey) %>%
summarize(income_mean = dollar_format()(weighted.se(income,w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "se")
income_df <- left_join(income_mean_df, income_ses_df) %>%
filter(survey != "cps")
income_df <- within(income_df, {
survey[survey == "cps_income"] <- "cps"
entry <- paste0(mean, " (", se, ")")
})
means_and_ses <- left_join(means, ses) %>%
filter(variable != "weights")
dont_multiply <- c("age", "education", "income_mean", "income_median")
means_and_ses <- within(means_and_ses,{
entry <- rep(NA, nrow(means_and_ses))
entry[variable %in% c("age", "education")] <-
paste0(format_num(mean[variable %in% c("age", "education")], digits = 2), " ",
add_parens(se[variable %in% c("age", "education")], digits = 2))
entry[!variable %in%dont_multiply] <-
paste0(format_num(100*mean[!variable %in%dont_multiply], digits = 2), " ",
add_parens(100*se[!variable %in%dont_multiply], digits = 2))
})
Ns <-
demos_stacked %>%
group_by(survey) %>%
summarize(n = n(),
n = comma_format()(n)) %>%
melt(id.var = "survey", value.name = "entry") %>%
filter(survey != "cps_income")
#150,799
df <- bind_rows(means_and_ses %>% select(survey, variable, entry),
income_df %>% select(survey, variable, entry),
Ns)
demo_table <- df %>% dcast(variable ~ survey, value.var = "entry") %>%
bind_rows(data.frame(variable = c("Race", "Region")))
demo_table <- within(demo_table,{
anes <- gsub(pattern = " \\(NA\\)", replacement = "", anes)
anes2012 <- gsub(pattern = " \\(NA\\)", replacement = "", anes2012)
anes_panel <- gsub(pattern = " \\(NA\\)", replacement = "", anes_panel)
cps <- gsub(pattern = " \\(NA\\)", replacement = "", cps)
lucid <- gsub(pattern = " \\(NA\\)", replacement = "", lucid)
mturk <- gsub(pattern = " \\(NA\\)", replacement = "", mturk)
mturk[mturk == "NaN (NaN)"] <- ""
variable <- factor(variable, levels = c("female","age","education","income_mean","income_median",
"Race", "race_white","race_black","race_hispanic","race_asian","race_native",
"Region", "region_northeast","region_midwest","region_south","region_west", "n"))
})
demo_table <-
demo_table[,c("variable", "lucid", "mturk", "anes_panel", "cps", "anes", "anes2012")] %>%
arrange(variable)
View(demo_table)
View(demo_table)
# Political Table
# Functions ---------------------------------------------------------------
install.packages("dplyr")
install.packages("reshape2")
install.packages("scales")
install.packages("xtable")
library(dplyr)
library(reshape2)
library(scales)
library(xtable)
source("LucidValidationHelperFunctions.R")
# Load Stacked Dataset ----------------------------------------------------
load("PoliticsTableStacked.rdata")
# Means and SEs -----------------------------------------------------------
means <-
politics_stacked %>%
group_by(survey) %>%
summarize_each(funs(weighted.mean(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "mean")
ses <-
politics_stacked %>%
group_by(survey) %>%
summarize_each(funs(weighted.se(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "se")
means_and_ses <- left_join(means, ses) %>%
filter(variable != "weights")
dont_multiply <- c("party7", "ideology", "interest")
means_and_ses <- within(means_and_ses,{
entry <- rep(NA, nrow(means_and_ses))
entry[variable %in% dont_multiply] <-
paste0(format_num(mean[variable %in% dont_multiply], digits = 2), " ",
add_parens(se[variable %in% dont_multiply], digits = 2))
entry[!variable %in%dont_multiply] <-
paste0(format_num(100*mean[!variable %in%dont_multiply], digits = 2), " ",
add_parens(100*se[!variable %in%dont_multiply], digits = 2))
})
Ns <-
politics_stacked %>%
group_by(survey) %>%
summarize(n = n(),
n = comma_format()(n)) %>%
melt(id.var = "survey", value.name = "entry")
df <- bind_rows(means_and_ses %>% select(survey, variable, entry),
Ns)
politics_table <- df %>% dcast(variable ~ survey, value.var = "entry") %>%
bind_rows(data.frame(variable = c("Opinions", "Behavior", "Traits")))
politics_table <- within(politics_table,{
anes <- gsub(pattern = " \\(NA\\)", replacement = "", anes)
anes <- gsub(pattern = "NA", replacement = "", anes)
anes2012 <- gsub(pattern = " \\(NA\\)", replacement = "", anes2012)
anes_panel <- gsub(pattern = " \\(NA\\)", replacement = "", anes_panel)
cps <- gsub(pattern = " \\(NA\\)", replacement = "", cps)
lucid <- gsub(pattern = " \\(NA\\)", replacement = "", lucid)
mturk <- gsub(pattern = " \\(NA\\)", replacement = "", mturk)
cps[cps == "NaN (NaN)"] <- ""
anes[anes == "NaN (NaN)"] <- ""
anes2012[anes2012 == "NaN (NaN)"] <- ""
variable <- factor(variable, levels = c("Behavior","register","vote",
"Traits","party7", "ideology", "interest", "knowl_score",
"Opinions", "seniors", "healthcare", "immigration", "gaymarriage", "taxrich", "taxpoor", "n"))
})
politics_table <-
politics_table[,c("variable", "lucid", "mturk", "anes_panel", "cps", "anes", "anes2012")] %>%
arrange(variable)
View(politics_table)
load("PsychTableStacked.rdata")
# Means and SEs -----------------------------------------------------------
means <-
psych_stacked %>%
group_by(survey) %>%
summarize_each(funs(weighted.mean(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "mean")
ses <-
psych_stacked %>%
group_by(survey) %>%
summarize_each(funs(weighted.se(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "se")
means <- within(means,{
mean[variable=="NFC" & survey=="mturk"] <- mean[variable=="NFC" & survey=="mturk_risk"]
mean[variable=="NTE" & survey=="mturk"] <- mean[variable=="NTE" & survey=="mturk_risk"]
mean[variable=="ramean" & survey=="mturk"] <- mean[variable=="ramean" & survey=="mturk_risk"]
})
ses <- within(ses,{
se[variable=="NFC" & survey=="mturk"] <- se[variable=="NFC" & survey=="mturk_risk"]
se[variable=="NTE" & survey=="mturk"] <- se[variable=="NTE" & survey=="mturk_risk"]
se[variable=="ramean" & survey=="mturk"] <- se[variable=="ramean" & survey=="mturk_risk"]
})
means_and_ses <- left_join(means, ses) %>%
filter(variable != "weights", survey!="mturk_risk")
means_and_ses <- within(means_and_ses,{
entry <- rep(NA, nrow(means_and_ses))
entry <-
paste0(format_num(mean, digits = 2), " ",
add_parens(se, digits = 2))
})
Ns <-
psych_stacked %>%
filter(survey!="mturk_risk")%>%
group_by(survey) %>%
summarize(n = n(),
n = comma_format()(n)) %>%
melt(id.var = "survey", value.name = "entry")
df <- bind_rows(means_and_ses %>% select(survey, variable, entry),
Ns)
psych_table <- df %>% dcast(variable ~ survey, value.var = "entry") %>%
bind_rows(data.frame(variable = "Big 5 Personality Index"))
psych_table <- within(psych_table,{
anes[anes == "NA (NA)"] <- ""
anes_panel[anes_panel == "NA (NA)"] <- ""
anes2012[anes2012 == "NA (NA)"] <- ""
anes2012[anes2012 == "NaN (NaN)"] <- ""
cces[cces == "NA (NA)"] <- ""
cces[cces == "NaN (NaN)"] <- ""
ccap[ccap == "NA (NA)"] <- ""
ccap[ccap == "NaN (NaN)"] <- ""
kam[kam == "NaN (NaN)"] <- ""
variable <- factor(variable, levels = c("Big 5 Personality Index","agreeableness","conscientiousness",
"emotionalstability","extraversion", "opennesstoexperiences", "ramean", "NFC",
"NTE", "n"))
})
psych_table <-
psych_table[,c("variable", "lucid", "mturk", "cces", "ccap", "anes_panel", "anes", "anes2012","kam" )] %>%
arrange(variable)
View(psych_table)
load("StandardizedDemos.rdata")
load("StandardizedExperiments.rdata")
demos_plot <-
ggplot(demos_standardized, aes(x = mean, y = Variable, group = Survey, color = Survey, shape = Survey)) +
geom_point(position = position_dodgev(height = .5)) +
geom_errorbarh(aes(xmin = li, xmax = ui),position = position_dodgev(height = .5), height = 0) +
theme_bw() +
facet_grid(facet~., scales = "free_y", space = "free_y") +
#scale_y_discrete(labels = varnames_demos) +
theme(axis.title = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
strip.background = element_blank()) +
coord_cartesian(xlim = c(-1, 1)) +
ggtitle("Standardized Means for Demographic Variables")
#Adjust variable to get the correct order
experiments_standardized$facet_f <- factor(experiments_standardized$facet, levels=c('Welfare', 'Asian Disease', 'Kam and Simas', 'Hiscox', 'Berinsky'))
experiments_plot <- ggplot(experiments_standardized, aes(x = coef, y = Variable, group = Survey, color = Survey, shape= Survey)) +
geom_point(position = position_dodgev(height = .5)) +
geom_errorbarh(aes(xmin = li, xmax = ui), position = position_dodgev(height = .5), height = 0) +
facet_grid(facet_f~., scales = "free_y", space = "free_y") +
theme_bw() +
theme(axis.title = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
strip.background = element_blank()) +
coord_cartesian(xlim = c(-1.5, 1.5)) +
ggtitle("Standardized Treatment Effects For Experimental Replications")
experiments_plot
demos_plot
library(ggplot2)
library(coefplot)
load("standardizedExperimentsHeterogeneousTreatmentEffects.rdata")
standardizedExperiments1 <- filter(standardizedExperiments, facet=="Welfare"| facet=="Asian Disease" | facet=="Kam and Simas")
standardizedExperimentsHiscox <- filter(standardizedExperiments, facet=="Expert"| facet=="Positive frame"|facet=="Negative frame" | facet=="Both frames")
standardizedExperimentsBerinsky <- filter(standardizedExperiments, facet=="Rumor only"| facet=="Rumor + Nonpartisan correction"|facet=="Rumor + Republican correction" | facet=="Rumor + Democratic correction")
library(dplyr)
standardizedExperiments1 <- filter(standardizedExperiments, facet=="Welfare"| facet=="Asian Disease" | facet=="Kam and Simas")
standardizedExperimentsHiscox <- filter(standardizedExperiments, facet=="Expert"| facet=="Positive frame"|facet=="Negative frame" | facet=="Both frames")
standardizedExperimentsBerinsky <- filter(standardizedExperiments, facet=="Rumor only"| facet=="Rumor + Nonpartisan correction"|facet=="Rumor + Republican correction" | facet=="Rumor + Democratic correction")
load("standardizedExperimentsHeterogeneousEffects.rdata")
load("C:/Users/sunwoong/Downloads/dataverse_files/ReplicationArchive/DemosTableStacked.rdata")
View(demos_stacked)
# uncomment to install
install.packages("reshape2")
install.packages("scales")
install.packages("xtable")
install.packages("purrr")
install.packages("dplyr")
install.packages("matrixStats")
library(reshape2)
library(scales)
library(xtable)
library(purrr)
library(dplyr)
library(matrixStats)
source("LucidValidationHelperFunctions.R")
load("DemosTableStacked.rdata")
means <-
demos_stacked %>%
filter(survey != "cps_income") %>%
select(-contains("income")) %>%
group_by(survey) %>%
summarize_all(funs(weighted.mean(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "mean")
ses <-
demos_stacked %>%
filter(survey != "cps_income") %>%
select(-contains("income")) %>%
group_by(survey) %>%
summarize_all(funs(weighted.se(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "se")
income_mean_df <-
demos_stacked %>%
group_by(survey) %>%
summarize(income_mean = dollar_format()(weighted.mean(income,w = weights, na.rm = TRUE)),
income_median = dollar_format()(matrixStats::weightedMedian(income,w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "mean")
income_ses_df <-
demos_stacked %>%
group_by(survey) %>%
summarize(income_mean = dollar_format()(weighted.se(income,w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "se")
income_df <-
left_join(income_mean_df, income_ses_df) %>%
filter(survey != "cps")
income_df <- within(income_df, {
survey[survey == "cps_income"] <- "cps"
entry <- paste0(mean, " (", se, ")")
})
income_df <-
left_join(income_mean_df, income_ses_df) %>%
filter(survey != "cps")
income_df <- within(income_df, {
survey[survey == "cps_income"] <- "cps"
entry <- paste0(mean, " (", se, ")")
})
means_and_ses <- left_join(means, ses) %>%
filter(variable != "weights")
dont_multiply <- c("age", "education", "income_mean", "income_median")
means_and_ses <- within(means_and_ses,{
entry <- rep(NA, nrow(means_and_ses))
entry[variable %in% c("age", "education")] <-
paste0(format_num(mean[variable %in% c("age", "education")], digits = 2), " ",
add_parens(se[variable %in% c("age", "education")], digits = 2))
entry[!variable %in%dont_multiply] <-
paste0(format_num(100*mean[!variable %in%dont_multiply], digits = 2), " ",
add_parens(100*se[!variable %in%dont_multiply], digits = 2))
})
Ns <-
demos_stacked %>%
group_by(survey) %>%
summarize(n = n(),
n = comma_format()(n)) %>%
melt(id.var = "survey", value.name = "entry") %>%
filter(survey != "cps_income")
df <-
bind_rows(means_and_ses %>% select(survey, variable, entry),
income_df %>% select(survey, variable, entry),
Ns)
demo_table <- df %>% dcast(variable ~ survey, value.var = "entry") %>%
bind_rows(data.frame(variable = c("Race", "Region")))
demo_table <- within(demo_table,{
anes <- gsub(pattern = " \\(NA\\)", replacement = "", anes)
anes2012 <- gsub(pattern = " \\(NA\\)", replacement = "", anes2012)
anes_panel <- gsub(pattern = " \\(NA\\)", replacement = "", anes_panel)
cps <- gsub(pattern = " \\(NA\\)", replacement = "", cps)
lucid <- gsub(pattern = " \\(NA\\)", replacement = "", lucid)
mturk <- gsub(pattern = " \\(NA\\)", replacement = "", mturk)
mturk[mturk == "NaN (NaN)"] <- ""
variable <- factor(variable, levels = c("female","age","education","income_mean","income_median",
"Race", "race_white","race_black","race_hispanic","race_asian","race_native",
"Region", "region_northeast","region_midwest","region_south","region_west", "n"))
})
demo_table <-
demo_table[,c("variable", "lucid", "mturk", "anes_panel", "cps", "anes", "anes2012")] %>%
arrange(variable)
View(demo_table)
library(dplyr)
library(reshape2)
library(scales)
library(xtable)
source("LucidValidationHelperFunctions.R")
load("PoliticsTableStacked.rdata")
# Means and SEs -----------------------------------------------------------
means <-
politics_stacked %>%
group_by(survey) %>%
summarize_all(funs(weighted.mean(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "mean")
ses <-
politics_stacked %>%
group_by(survey) %>%
summarize_all(funs(weighted.se(x = ., w = weights, na.rm = TRUE))) %>%
melt(id.vars = "survey", value.name = "se")
means_and_ses <-
left_join(means, ses) %>%
filter(variable != "weights")
dont_multiply <- c("party7", "ideology", "interest")
means_and_ses <- within(means_and_ses,{
entry <- rep(NA, nrow(means_and_ses))
entry[variable %in% dont_multiply] <-
paste0(format_num(mean[variable %in% dont_multiply], digits = 2), " ",
add_parens(se[variable %in% dont_multiply], digits = 2))
entry[!variable %in%dont_multiply] <-
paste0(format_num(100*mean[!variable %in%dont_multiply], digits = 2), " ",
add_parens(100*se[!variable %in%dont_multiply], digits = 2))
})
Ns <-
politics_stacked %>%
group_by(survey) %>%
summarize(n = n(),
n = comma_format()(n)) %>%
melt(id.var = "survey", value.name = "entry")
df <-
bind_rows(means_and_ses %>% select(survey, variable, entry), Ns)
politics_table <- df %>% dcast(variable ~ survey, value.var = "entry") %>%
bind_rows(data.frame(variable = c("Opinions", "Behavior", "Traits")))
politics_table <- within(politics_table,{
anes <- gsub(pattern = " \\(NA\\)", replacement = "", anes)
anes <- gsub(pattern = "NA", replacement = "", anes)
anes2012 <- gsub(pattern = " \\(NA\\)", replacement = "", anes2012)
anes_panel <- gsub(pattern = " \\(NA\\)", replacement = "", anes_panel)
cps <- gsub(pattern = " \\(NA\\)", replacement = "", cps)
lucid <- gsub(pattern = " \\(NA\\)", replacement = "", lucid)
mturk <- gsub(pattern = " \\(NA\\)", replacement = "", mturk)
cps[cps == "NaN (NaN)"] <- ""
anes[anes == "NaN (NaN)"] <- ""
anes2012[anes2012 == "NaN (NaN)"] <- ""
variable <- factor(variable, levels = c("Behavior","register","vote",
"Traits","party7", "ideology", "interest", "knowl_score",
"Opinions", "seniors", "healthcare", "immigration", "gaymarriage", "taxrich", "taxpoor", "n"))
})
politics_table <-
politics_table[,c("variable", "lucid", "mturk", "anes_panel", "cps", "anes", "anes2012")] %>%
arrange(variable)
View(politics_table)
